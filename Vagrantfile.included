# -*- mode: ruby -*-
# vi: set ft=ruby :

#===============================================
# BBRUCE
#
# To package files with vagrant use this command:
# vagrant package --vagrantfile ./Vagrantfile  --include bootstrap.sh 
#
# Included files are stored in the packaged box directory under ./include.
# Ex. C:\Users\publi\.vagrant.d\boxes\bentoUbuntu16.04Mean3\0\virtualbox\include
#
# The edited Vagrantfile is used as the base config for the box but is not visible.  
# A new blank template file is aways included after vagrant init is run.
#
# To access the bootstrap.sh file from the Vagrantfile, use File.expand_path with __FILE__ variable. 
# Ex. config.vm.provision :shell, path: File.expand_path("../bootstrap.sh", __FILE__)
#===============================================

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "bentoUbuntu16.04Mean"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  #-------------
  # BBRUCE - Open a default port 81 to 3000 for the mean server.
  # BBRUCE - forward_port is vagrant config 1.  forwarded_port is vagrant 2.
  # host_ip required - bug.  Will get error.
  #-------------
  config.vm.network :forwarded_port, guest: 3000, host: 81, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  #-------------
  # BBRUCE - /vagrant is automatically shared without any configuration...
  #-------------
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL

  #-------------
  # BBRUCE - Sample of included shell script file
  #-------------
  #config.vm.provision :shell, path: File.expand_path("../bootstrap.sh", __FILE__)

  #-------------
  # BBRUCE - Sample of inline script with default user instead of root.
  #-------------
  $script = <<-SCRIPT
    # Stuff
  SCRIPT
  config.vm.provision "shell", inline: $script, privileged: false

  #-------------
  # BBRUCE - Sample of script which is only run once on first startup.  Runs as root.
  # Set timezone to EST.
  #-------------
  $script = <<-SCRIPT
    # Only run the following commands on the very first vagrant up by checking a file
    if [ -f "/var/vagrant_provision" ]; then
      exit 0
    fi

    # Set timezone to EST
    echo \"America/New_York\" | tee /etc/timezone && rm /etc/localtime && dpkg-reconfigure --frontend noninteractive tzdata

    # Set file flag on first execution only
    touch /var/vagrant_provision
  SCRIPT
  config.vm.provision "shell", inline: $script

end
